

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>SeongSik Seo</title>
  <subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle>
  <updated>2022-01-10T17:10:33+09:00</updated>
  <author>
    <name>seongsik seo</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="ko"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator>
  <rights> © 2022 seongsik seo </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>[Vue.js] Vue CLI로 프로젝트 생성하기</title>
    <link href="http://localhost:4000/posts/vueJs-02/" rel="alternate" type="text/html" title="[Vue.js] Vue CLI로 프로젝트 생성하기" />
    <published>2022-01-10T00:00:00+09:00</published>
  
    <updated>2022-01-10T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/vueJs-02/</id>
    <content src="http://localhost:4000/posts/vueJs-02/" />
    <author>
      <name>seongsik seo</name>
    </author>

  
    
    <category term="Vue.js" />
    
  

  
    <summary>
      





      Vue-CLI



Vue-CLI는 신속하게 Vue.js 개발환경을 설정할 수 있도록 도와주는 도구이다.
기본적으로 초기 프로젝트 세팅을 생성해주기 때문에 프로젝트 구조, Lint, webpack, babel과 같은 도구들의 설정 고민을 덜 수 있다.

CLI란

  명령 줄 인터페이스(CLI, Command line interface) 또는 명령어 인터페이스는 텍스트 터미널을 통해 사용자와 컴퓨터가 상호 작용하는 방식을 뜻한다.
  즉, 작업 명령은 사용자가 컴퓨터 키보드 등을 통해 문자열의 형태로 입력하며, 컴퓨터로부터의 출력 역시 문자열의 형태로 주어진다.




설치

Node 버전 요구 사항

  Vue CLI 4.x에는 Node.js 버전 8.9 이상이 필요. (v10+ 권장)


이전 버전...
    </summary>
  

  </entry>

  
  <entry>
    <title>[Vue.js] 사전 필수요소</title>
    <link href="http://localhost:4000/posts/vueJs-01/" rel="alternate" type="text/html" title="[Vue.js] 사전 필수요소" />
    <published>2022-01-10T00:00:00+09:00</published>
  
    <updated>2022-01-10T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/vueJs-01/</id>
    <content src="http://localhost:4000/posts/vueJs-01/" />
    <author>
      <name>seongsik seo</name>
    </author>

  
    
    <category term="Vue.js" />
    
  

  
    <summary>
      





      필수 요소



Crome 설치

Vue는 ECMAScript 5 기능을 사용하기 때문에 IE8 이하 버전을 지원하지 않습니다. 하지만 모든 ECMAScript5 호환 브라우저를 지원합니다.





Node.js 설치

LTS 버전을 다운로드 합니다.

[Node.js] 시작하기를 참고.



Vue Devtools(개발자 도구) 설치

일반적으로 프론트엔드 개발시 크롬 개발자 도구로 디버깅을 했다면, Vue는 자체적으로 제공하는 개발자 도구를 사용합니다.

설치가 완료되었다면, 크롬 브라우저 오른쪽 설정에서

도구 더보기 &amp;gt; 확장 프로그램 클릭



vue.js devtools &amp;gt; 세부정보 클릭 &amp;gt; 사이트 엑세스 &amp;gt; 모든 사이트에서로 변경





VScode 설치

무료 ID...
    </summary>
  

  </entry>

  
  <entry>
    <title>[ESLint] 포맷팅에 특화된 프리티어(Prettier)</title>
    <link href="http://localhost:4000/posts/eslint-03/" rel="alternate" type="text/html" title="[ESLint] 포맷팅에 특화된 프리티어(Prettier)" />
    <published>2022-01-06T00:00:00+09:00</published>
  
    <updated>2022-01-06T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/eslint-03/</id>
    <content src="http://localhost:4000/posts/eslint-03/" />
    <author>
      <name>seongsik seo</name>
    </author>

  
    
    <category term="ESLint" />
    
  

  
    <summary>
      





      Prettier



ESLint는 포맷팅과 코드 품질에 도움을 주는 도구라면 프리티어(Prettier)는 포맷팅에만 특화된 도구이다.
ESLint에 없는 기능들을 프리티어(Prettier)가 해결해준다.



install

    npm install -D prettier




    var x = 'asd';;;

    console.log('########################################### 80자 넘음 #######################################################');




    module.exports = {
        "env": {
            "browser": true,
            "es2...
    </summary>
  

  </entry>

  
  <entry>
    <title>[ESLint] Style-Guide 설정</title>
    <link href="http://localhost:4000/posts/eslint-02/" rel="alternate" type="text/html" title="[ESLint] Style-Guide 설정" />
    <published>2022-01-05T00:00:00+09:00</published>
  
    <updated>2022-01-05T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/eslint-02/</id>
    <content src="http://localhost:4000/posts/eslint-02/" />
    <author>
      <name>seongsik seo</name>
    </author>

  
    
    <category term="ESLint" />
    
  

  
    <summary>
      





      style-guide



ESLint는 커스터마이징이 쉽고 확장성이 뛰어나 많이 사용되고 있는 추세이다.
또한, ESLint는 개발자들이 커스터마이징한 style-guide 설정들을 외부에 공개하여 공유할 수 있다.

가장 널리 쓰고있는 2가지를 소개하자면


  Airbnb Style Guide
  Google Style Guide


서로 제공하는 Style Guide를 참고하여 사용자의 목적에 맞게 사용하면 된다.



init

npx eslint --init으로  .eslintrc 파일을 생성한다.

    $ npx eslint --init
    √ How would you like to use ESLint? · problems
    √ What type of modules does y...
    </summary>
  

  </entry>

  
  <entry>
    <title>[ESLint] ESLint 시작하기</title>
    <link href="http://localhost:4000/posts/eslint-01/" rel="alternate" type="text/html" title="[ESLint] ESLint 시작하기" />
    <published>2022-01-05T00:00:00+09:00</published>
  
    <updated>2022-01-05T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/eslint-01/</id>
    <content src="http://localhost:4000/posts/eslint-01/" />
    <author>
      <name>seongsik seo</name>
    </author>

  
    
    <category term="ESLint" />
    
  

  
    <summary>
      





      ESLint란?




  ESLint란 코딩 컨벤션에 위배되는 코드나 안티 패턴을 자동으로 검출하는 분석 도구이다.
  코드를 분석하여 문법적인 오류나 안티 패턴을 찾고 일관된 코드 스타일로 작성할 수 있도록 도와준다.
  ESLint는 유용하게 사용할 수 있도록 style-guide를 제공한다.
  대표적으로 Airbnb Style Guide, Google Style Guide이 있다.
  개발자가 직접 style-guide를 작성할 수도 있다.


Install



   $ npm install eslint --save-dev


   $ mkdir eslint_sample  // 프로젝트 폴더 생성
   $ cd eslint_sample/    // 프로젝트 이동

   $ npm init  ...
    </summary>
  

  </entry>

</feed>


